{
  "name": "Whatsapp Chatbot",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -1600,
        -460
      ],
      "id": "315d5000-cece-4212-aa6c-5d4e2ff5006c",
      "name": "WhatsApp Trigger",
      "webhookId": "db782eb8-f92b-4036-abef-7c16b19f4e37",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "wx9NQ3n1sa0hhr1W",
          "name": "WhatsApp OAuth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -240,
        -440
      ],
      "id": "c3c5b3bb-c01d-4579-8246-fff91b91c8cc",
      "name": "WhatsApp Business Cloud",
      "webhookId": "15cbbf9c-1261-4967-8351-f9e4d609f7c2",
      "credentials": {
        "whatsAppApi": {
          "id": "5qDs9FFg8Aoxew5s",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1600,
        -140
      ],
      "id": "81376f33-ab4f-4014-954a-e907b43cbcd8",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "GKxIR7f6haVueOwo",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1340,
        -140
      ],
      "id": "8f64ef24-39fa-4342-94ce-fd5c7f8b34a7",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}",
        "options": {
          "systemMessage": "=You are a helpful assistant\n\n# You have access to these tools:\n- A Google Calendar tool that allows you to create, reschedule, and delete events in the calendar.\n- Several Google Sheet tools:\n- \"Google Sheet - Add Row\": allows you to add a row to a Google Sheet\n- \"Google Sheet - Update Row\": allows you to update a row in a Google Sheet\n- \"Google Sheet - Read\": allows you to read a row in the Google Sheet\n- Gmail - Send Confirmation User: allows you to send a confirmation email to the user after the information is confirmed.\n\"The current time and date is the following German Time Zone: {{ $now }}.\n# Your Task:\n1) Start by asking the user: \n'Would you like to book an appointment?'\n\nIf the user responds with yes, begin collecting their contact information.\n\nYou must always collect the contact information in the following strict order:\n- First: Email address\n  - This will be used as the unique identifier to match the row in the Google Sheet.\n\n  - After receiving the email address, immediately check if a row with this email already exists using 'Google Sheet - Read'. \n  - If found, use \"Google Sheet - Update Row\" to update the existing row. \n    -If not found, use \"Google Sheet - Add Row\" to create a new one with the email.\n\nThen: Full name\nThen: Phone number\nThen: Location or time zone\n\n  - Only ask for one piece of information at a time.\n  - Wait for the user's reply before asking the next question. \n  - After every response, immediately update the Google Sheet using \"Google Sheet - Update Row\", matched by the email.\n\n2) You must always store all user information (email address, name, phone number, and location/time zone) in the Google Sheet.\n\n2.5) After collecting the location/time zone, ask the user: \n\"What would you like to discuss during your appointment?\"\n- Wait for the user's response.\n- Then immediately update the same row in the Google Sheet using \"Google Sheet - Update Row\", matched by the email address.\n- Save the user's response as the appointment topic or notes.\n3) Once the user's contact information and discussion topic have been collected, you must offer 5 available time slots for booking.\n- Use the assistant's local time zone (German time) to determine availability.\n- The available office hours are:\n  - Monday to Friday\n  - Morning block: 09:00-12:00\n  - Afternoon block: 13:00-17:00 \n  - (Never offer times between 12:00 and 13:00)\n\n- Do not offer any time slots that fall outside of these hours in German time, even if they appear to be valid in the user's local time zone.\n- When a user requests a time range (e.g., \"afternoon\"), follow this logic:\n  1. Understand the time range based on the user's time zone.\n  2. Convert that time range into German time.\n  3. Only offer time slots that match both the user's intent and fall within the German office hours.\n- You must check that a full 60-minute block is available:\n  - The start and end time must not conflict with any calendar event. \n  - The time slot must begin at least 24 hours in the future.\n  \n- Always offer the next 5 available 60-minute time slots that meet the above criteria.\n\n- Only display the time slots in the user’s time zone. \n  ➜ Do not mention German time anywhere in your response.\n  ➜ Do not include time conversions in parentheses.\n- Present the time slots in a simple, friendly format like: \n  “Here are the next available time slots in your local time zone: \n  - Thursday at 10:00 AM \n  - Friday at 11:30 AM \n  …”\n  - If no valid slots match the user’s requested period (e.g., afternoon), politely inform the user and offer the next closest options.\n- Never mention unavailable or already booked time slots. Only show the free ones. Do not include notes, reminders, or explanations about other bookings.\n\n- You must not manually calculate or estimate time zone offsets.\n- Use the Google Calendar tool to convert and format times.\n- Always respect daylight saving time (DST) in both the user's and assistant's time zone.\n4) When the user confirms a preferred date and time, you must:\n- Create an event in the Google Calendar at the selected time.\n\n- Appointments should always be scheduled for 60 minutes unless the user specifies otherwise.\n\n- Do not create a new row in the Google Sheet.\n\n- Instead, use the tool \"Google Sheet - Update Row\" to update the existing row corresponding to the user (matched by email address) and add the selected date and time as the confirmed appointment.\n\n- The appointment time saved in the Google Sheet must always be in the assistant's local time (German time) - never in the user's time zone.\n\n- After the booking is confirmed, send a confirmation email to the user using the \"Gmail - Send Confirmation User\" tool.\n- The email must include:\n  - The confirmed appointment date and time (in the user's local time zone)\n  - The user's name and topic of discussion\n  - A short, friendly message confirming the booking\n\nOnly send the confirmation email after the calendar event has been created and all data has been stored in the Google Sheet.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -700,
        -440
      ],
      "id": "d6d46f21-2c0d-4964-95da-db9dd3b5603e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "oyeroolasunkanmi96@gmail.com",
          "mode": "list",
          "cachedResultName": "oyeroolasunkanmi96@gmail.com"
        },
        "start": "={{ $fromAI(\"start\",\"date and time for when the event should start\") }}",
        "end": "={{ $fromAI(\"end\",\"date and time for when the event should end\") }}",
        "additionalFields": {
          "summary": "={{ $fromAI(\"title\",\"This is the title of the event\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -920,
        -140
      ],
      "id": "4bf80674-0986-4c34-aee0-148f73e30c08",
      "name": "Calendar Create",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "AFpQSMUBYQyixsWG",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "oyeroolasunkanmi96@gmail.com",
          "mode": "list",
          "cachedResultName": "oyeroolasunkanmi96@gmail.com"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1120,
        -140
      ],
      "id": "c427035f-78e8-4664-9a6d-16d0788fb4d6",
      "name": "Calendar Read",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "AFpQSMUBYQyixsWG",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U",
          "mode": "list",
          "cachedResultName": "Whatsapp Google Sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email Address": "={{ $fromAI(\"email\",\"the email address of the user gave you earlier\") }}\n\n"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Appointment Date",
              "displayName": "Appointment Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Booking Status",
              "displayName": "Booking Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Time Zone",
              "displayName": "Time Zone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email Address",
              "displayName": "Email Address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Intake Form",
              "displayName": "Intake Form",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -220,
        -140
      ],
      "id": "f09892a6-eefa-4bca-93e4-cc92ac39188f",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "S8OnYmc5r8aaPTs9",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "oyeroolasunkanmi96@gmail.com",
          "mode": "list",
          "cachedResultName": "oyeroolasunkanmi96@gmail.com"
        },
        "eventId": "={{ $fromAI(\"id\",\"This is the id of the event\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -700,
        -140
      ],
      "id": "ee0975d0-31d7-4a99-8cea-e7eb16af16a6",
      "name": "Calendar Delete",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "AFpQSMUBYQyixsWG",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U",
          "mode": "list",
          "cachedResultName": "Whatsapp Google Sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit#gid=0"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "detectAutomatically",
              "readRowsUntil": "firstEmptyRow"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -440,
        -140
      ],
      "id": "ccf3e5ff-ad36-49aa-96a3-5053b7e90632",
      "name": "Google Sheets-Read",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "S8OnYmc5r8aaPTs9",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U",
          "mode": "list",
          "cachedResultName": "Whatsapp Google Sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Hd3k5OwxhExK5mYOEsHYhSKWUeCTRpQgTBKRn2Fcs7U/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email Address": "={{ $fromAI(\"email\",\"the email address of the user gave you earlier\") }}",
            "Intake Form": "={{ $fromAI(\"intake_form\",\"specific topics or issues the user likes to discuss during the appointment\") }}",
            "Phone": "={{ $fromAI(\"phone\",\"the phone number that the user tells you. Always save the phone number with the country code that is associated with the time zone the user mentioned. But do not include \"+\" sign and there should be no space between country code and actual number\") }}",
            "Appointment Date": "={{ $fromAI(\"date\",\"the appointment date and time converted to Germany Timezone that the user confirmed as his appointment\") }}\n\n",
            "Booking Status": "={{ $fromAI(\"status\",\"the status of the appointment which is either confirmed or cancelled\") }}",
            "Time Zone": "={{ $fromAI(\"timezone\",\"the time zone in which the appointment is scheduled\") }}",
            "Name": "={{ $fromAI(\"name\",\"the name of the user\") }}"
          },
          "matchingColumns": [
            "Email Address"
          ],
          "schema": [
            {
              "id": "Appointment Date",
              "displayName": "Appointment Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Booking Status",
              "displayName": "Booking Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time Zone",
              "displayName": "Time Zone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email Address",
              "displayName": "Email Address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Intake Form",
              "displayName": "Intake Form",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        20,
        -120
      ],
      "id": "c1e485f2-0bae-45fb-bacc-2bf10304127c",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "S8OnYmc5r8aaPTs9",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"email\",\"the email address of the user gave you earlier\") }}",
        "subject": "={{ $fromAI(\"subject\",\"the email subjectline that just is [New Booking] + Booking date and time converted to user Timezone that he mentioned earlier \") }}\n\n",
        "message": "={{ $fromAI(\"body\",\"the email body that contains the message that the booking of the user was confirmed along with booking date,email,name,timezone,what user want to discuss during the appointment\") }}\n\n",
        "options": {
          "appendAttribution": false,
          "bccList": "oyeroolasunkanmi96@gmail.com"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        240,
        -120
      ],
      "id": "78b4cf95-e5a6-4050-b2da-06285044c2a8",
      "name": "Gmail",
      "webhookId": "eb0d2a0a-f307-4fce-92d9-9e538750b43e",
      "credentials": {
        "gmailOAuth2": {
          "id": "5YuQhWfVaihll7jC",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1d5877ff-2fb6-45af-9289-9b3fa0445960",
              "name": "text",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        -440
      ],
      "id": "135fdbe7-eb9a-4f3c-8ad4-1ded1615d662",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "38a1531d-b9aa-4c8e-af1c-ae83ee26b19c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "31f7f62e-9255-4184-9f28-f3795a74f644",
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1320,
        -460
      ],
      "id": "77cae30d-49de-49d0-ab0f-61de99ab7c47",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].audio.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1180,
        -640
      ],
      "id": "2283796b-5684-480e-96b1-df10956e4390",
      "name": "WhatsApp Business Cloud1",
      "webhookId": "322f23d6-6e4c-46a6-ae38-a4ce93b4fbf5",
      "credentials": {
        "whatsAppApi": {
          "id": "5qDs9FFg8Aoxew5s",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAATd1mlhhXYBOZCwTwUdU71f66vAMv45lRVhCAcQ93KrW0qnxFetJpd8ZACVqzuvsZAdSMM3TfJmmYDruaZAJvHyARultXES0eDyIZAdZBZBsPuzQRsoeZASQwzD33N91cS3Q27SV1m2epnBAE86HChYUScX6QvwqvChrCXBtpGKf2TZAqiFfXdBRC38UCybEo4e9dcERoLeDhL6bjZBappoTgihtF78Nuk78ZD"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -840,
        -640
      ],
      "id": "953a03af-a878-4b35-b2e3-ee09e928db3c",
      "name": "HTTP Request",
      "credentials": {
        "whatsAppApi": {
          "id": "5qDs9FFg8Aoxew5s",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -560,
        -640
      ],
      "id": "428b2f77-6c60-41f2-8c3c-def8f1f84130",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "cVJB5LmOcr8XkhB5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0461ce66-9700-4bf0-aa54-0b649e579b96",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1200,
        -840
      ],
      "id": "2f61ebb2-1257-4d67-942e-412ba86dcaf2",
      "name": "Webhook",
      "webhookId": "0461ce66-9700-4bf0-aa54-0b649e579b96"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=Your job is to send a short reminder WhatsApp message using the first name of {{ $json.body.name }}. It should also mention that his appointment regarding \"{{ $json.body.topic }}\" will take place on {{ $json.body.appointmentDate }}.\nHowever, the appointment time is based on German time. \nPlease convert the time to this correct timezone {{ $json.body.timezone }}. The current time is {{ $now }}.\nSign off \"Oyero\" as this is my name.\n#Rules:\n- Only generate the raw message and never use any introduction like \"Certainly! Here's a short reminder message for Olasunkanmi:\"\n- Do not use line breaks.\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -960,
        -840
      ],
      "id": "f1b7246f-1e0b-47e4-871d-98991099a57c",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "cVJB5LmOcr8XkhB5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.contacts[0].wa_id }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -540,
        -840
      ],
      "id": "59a42d6b-d5f9-4329-b61f-cacc1b63c4b2",
      "name": "WhatsApp Business Cloud3",
      "webhookId": "15cbbf9c-1261-4967-8351-f9e4d609f7c2",
      "credentials": {
        "whatsAppApi": {
          "id": "5qDs9FFg8Aoxew5s",
          "name": "WhatsApp account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "WhatsApp Business Cloud",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Read": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Create": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Delete": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets-Read": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "WhatsApp Business Cloud1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Business Cloud1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "WhatsApp Business Cloud3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9775969c-c1e7-40be-9899-d9830521dcbc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "efbf7d9452579dc4f99f51875827f8921652e01e00188fbbc00d9bb14c5bce9f"
  },
  "id": "PWD5G5htAemQWmt7",
  "tags": []
}